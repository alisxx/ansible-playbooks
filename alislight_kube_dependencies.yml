- name: Kubernetes Dependencies
  hosts: all
  become: yes
  tasks:
#    - name: Updates
#      apt:
#        update_cache: yes

#    - name: Reboot
#      reboot:

    - name: Disable SWAP
      shell: |
        swapoff -a

    - name: Disable SWAP in fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Create an empty file for the containerd module
      ignore_errors: yes
      file:
        path: /etc/modules-load.d/containerd.conf
        state: touch

    - name: Configure modules for containerd
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: Delete K8S sysctl parameters
      ignore_errors: yes
      file:
        state: absent
        path: /etc/sysctl.d/99-kubernetes-cri.conf

    - name: Create an empty file for K8S sysctl parameters
      ignore_errors: yes
      file:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        state: touch

    - name: Configure sysctl parameters for K8S
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        line: "{{ item }}"
      with_items:
        - "net.bridge.bridge-nf-call-iptables  = 1"
        - "net.ipv4.ip_forward                 = 1"
        - "net.bridge.bridge-nf-call-ip6tables = 1"

    - name: Apply sysctl parameters
      command: sysctl --system

    - name: Install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    - name: Add Docker apt-key
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc
        mode: "0644"
        force: true

    - name: Add Docker's APT repo
      apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}\n
 signed-by=/etc/apt/keyrings/docker-apt-keyring.asc]\n
 https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes

    - name: Delete kubernetes-apt-keyring.gpg
      ignore_errors: yes
      file:
        state: absent
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add kubernetes repository
      shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Add kubernetes apt-key
      shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Create containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: Add containerd configuration
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: Configuring Systemd cgroup driver for containerd
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: "SystemdCgroup = false"
        line: "SystemdCgroup = true"

    - name: Enable the containerd service and start service
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Wait for containerd service to start
      wait_for:
        #port: 8000
        #delay: 10
        timeout: 11

    - name: Updates
      apt:
        update_cache: yes

    - name: Install Kubelet
      apt:
        name: kubelet=1.29.10*
        state: present
        update_cache: true

    - name: Install Kubeadm
      apt:
        name: kubeadm=1.29.10*
        state: present

    - name: Enable the Kubelet service
      service:
        name: kubelet
        enabled: yes

    - name: Load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: Set bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: Set ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: Updates
      apt:
        update_cache: yes

- hosts: master
  become: yes
  tasks:
    - name: Install Kubectl on master init node
      apt:
        name: kubectl=1.29.10*
        state: present
        force: yes

- hosts: control-planes
  become: yes
  tasks:
    - name: Install Kubectl on additonal CP
      apt:
        name: kubectl=1.29.10*
        state: present
        force: yes
